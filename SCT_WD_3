<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8" />
  <meta name="viewport" content="width=device-width, initial-scale=1.0"/>
  <title>Tic Tac Toe</title>
  <style>
    body {
      font-family: Arial, sans-serif;
      background: #f0f0f0;
      display: flex;
      flex-direction: column;
      align-items: center;
      justify-content: center;
      height: 100vh;
      margin: 0;
    }

    h1 {
      margin-bottom: 20px;
    }

    .board {
      display: grid;
      grid-template-columns: repeat(3, 100px);
      grid-template-rows: repeat(3, 100px);
      gap: 5px;
    }

    .cell {
      width: 100px;
      height: 100px;
      background-color: white;
      display: flex;
      justify-content: center;
      align-items: center;
      font-size: 2.5rem;
      font-weight: bold;
      cursor: pointer;
      border: 2px solid #333;
      user-select: none;
    }

    .cell:hover {
      background-color: #e0e0e0;
    }

    .status {
      margin-top: 20px;
      font-size: 1.2rem;
    }

    .restart {
      margin-top: 10px;
      padding: 8px 16px;
      font-size: 1rem;
      cursor: pointer;
    }
  </style>
</head>
<body>

  <h1>Tic Tac Toe</h1>
  <div class="board" id="board"></div>
  <div class="status" id="status">Player X's turn</div>
  <button class="restart" onclick="restartGame()">Restart Game</button>

  <script>
    const board = document.getElementById("board");
    const statusText = document.getElementById("status");
    let currentPlayer = "X";
    let gameActive = true;
    let gameState = Array(9).fill("");

    const winningCombinations = [
      [0,1,2], [3,4,5], [6,7,8], // rows
      [0,3,6], [1,4,7], [2,5,8], // cols
      [0,4,8], [2,4,6]           // diagonals
    ];

    function handleCellClick(e) {
      const cell = e.target;
      const index = cell.getAttribute("data-index");

      if (gameState[index] !== "" || !gameActive) return;

      gameState[index] = currentPlayer;
      cell.textContent = currentPlayer;

      if (checkWin()) {
        statusText.textContent = `Player ${currentPlayer} wins!`;
        gameActive = false;
      } else if (gameState.every(cell => cell !== "")) {
        statusText.textContent = "It's a draw!";
        gameActive = false;
      } else {
        currentPlayer = currentPlayer === "X" ? "O" : "X";
        statusText.textContent = `Player ${currentPlayer}'s turn`;
      }
    }

    function checkWin() {
      return winningCombinations.some(combo => {
        const [a, b, c] = combo;
        return (
          gameState[a] &&
          gameState[a] === gameState[b] &&
          gameState[a] === gameState[c]
        );
      });
    }

    function restartGame() {
      gameState = Array(9).fill("");
      currentPlayer = "X";
      gameActive = true;
      statusText.textContent = `Player X's turn`;
      Array.from(board.children).forEach(cell => cell.textContent = "");
    }

    for (let i = 0; i < 9; i++) {
      const cell = document.createElement("div");
      cell.classList.add("cell");
      cell.setAttribute("data-index", i);
      cell.addEventListener("click", handleCellClick);
      board.appendChild(cell);
    }
  </script>

</body>
</html>
